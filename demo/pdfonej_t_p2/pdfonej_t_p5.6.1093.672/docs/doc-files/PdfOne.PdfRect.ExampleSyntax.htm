<html>
 <head>
  <LINK REL ="stylesheet" TYPE="text/css" HREF="../stylesheet.css" TITLE="Style">
  <LINK REL ="stylesheet" TYPE="text/css" HREF="example.css" TITLE="Style">
 </head>
 <body>
  <pre>
import java.awt.Rectangle;
import java.awt.geom.Rectangle2D;
import java.io.IOException;

import com.gnostice.pdfone.PDFOne;
import com.gnostice.pdfone.PdfDocument;
import com.gnostice.pdfone.PdfException;
import com.gnostice.pdfone.PdfRect;
import com.gnostice.pdfone.PdfWriter;

public class PdfRect_Examples
{
    <span class="cc">// Activates the component PDFOne.jar</span>
    static
    {
        PDFOne.activate("T95VZE:W8HBPVA:74VQ8QV:LO4V8",
            "9B1HRZAP:X5853ERNE:5EREMEGRQ:TX1R10");
    }

    public static void main(String[] args) throws IOException,
        PdfException
    {
        PdfRect_Examples obj = new PdfRect_Examples();

        <span class="cc">// To try other examples, add the obj.&lt;example_method&gt;
        // accordingly. For example, try:
        // obj.PdfRect_PdfRect_Example();</span>
        obj.METHODS_Example();
    }
    
    <span class="cc">// This code segment demonstrates the use of the methods of the
    // PdfRect class</span>
    public void METHODS_Example() throws IOException,
        PdfException
    {
        PdfWriter writer = PdfWriter.fileWriter(
                               "PdfRect_METHODS_Example.pdf");
        PdfDocument document = new PdfDocument(writer);

        <span class="cc">// Creates a PdfRect object</span>
        PdfRect rectangle = new PdfRect(200, 100, 250, 150);

</pre><a name="METHODS"></a><pre>
        <span class="cc">// Creates a string with output of the methods of the PdfRect
        // object</span>
        String s = "Width = " + rectangle.<span class="ck">width()</span>;
        s = s + ", Height = " + rectangle.<span class="ck">height()</span>;
        s = s + ", Top = " + rectangle.<span class="ck">top()</span>;
        s = s + ", Bottom = " + rectangle.<span class="ck">bottom()</span>;
        s = s + ", Left = " + rectangle.<span class="ck">left()</span>;
        s = s + ", Right = " + rectangle.<span class="ck">right()</span>;
        s = s + ", x = " + rectangle.<span class="ck">getX()</span>;
        s = s + ", y = " + rectangle.<span class="ck">getY()</span>;

        <span class="cc">// Writes the string inside the rectangle</span>
        document.writeText(s, rectangle);
        <span class="cc">// Draws the rectangle</span>
        document.drawRect(rectangle);
        <span class="cc">// Writes text identifying the rectangle</span>
        document.writeText("PdfRect(200, 100, 250, 150)", 200, 80);

        <span class="cc">// Sets the file to be opened after it is written to</span>
        document.setOpenAfterSave(true);

        <span class="cc">// Writes the document object to file</span>
        document.write();

        <span class="cc">// Closes all I/O streams associated with this writer object</span>
        writer.dispose();
    }

    <span class="cc">// This code segment creates PdfRect objects using overloaded
    // constructors</span>
    public void PdfRect_PdfRect_Example() throws IOException,
        PdfException
    {
        PdfWriter writer = PdfWriter.fileWriter(
                               "PdfRect_PdfRect_Example.pdf");
        PdfDocument document = new PdfDocument(writer);
</pre><a name="PdfRect_double_double_double_double"></a><pre>
        <span class="cc">// Creates a PdfRect object using a double-type arguments</span>
        PdfRect rect1 = new <span class="ck">PdfRect(200, 100, 250, 100)</span>;
</pre><a name="PdfRect_Rectangle"></a><pre>
        <span class="cc">// Creates a PdfRect object using a Java Rectangle object</span>
        PdfRect rect2 = new <span class="ck">PdfRect(
                            new Rectangle(200, 300, 250, 100))</span>;
</pre><a name="PdfRect_Rectangle2D"></a><pre>
        <span class="cc">// Creates a PdfRect object using a Java Rectangle2D object</span>
        PdfRect rect3 = new <span class="ck">PdfRect(
                            new Rectangle2D.Double(
                                200, 500, 250, 100))</span>;

        <span class="cc">// Draws the above PdfRect objects</span>
        document.drawRect(rect1);
        document.drawRect(rect2);
        document.drawRect(rect3);

        <span class="cc">// Writes text inside the rectangles</span>
        document.writeText(
            "PdfRect(double x, double y, double width, double "
            + "height) ~ PdfRect(200, 100, 250, 100)",
            rect1);
        document.writeText(
            "PdfRect(Rectangle rect) ~ PdfRect(new Rectangle(200, "
            + "300, 250, 100))",
            rect2);
        document.writeText(
            "PdfRect(Rectangle2D rect) ~ PdfRect(new "
            + "Rectangle2D.Double(200, 500, 250, 100))",
            rect3);

        <span class="cc">// Sets the file to be opened after it is written to</span>
        document.setOpenAfterSave(true);

        <span class="cc">// Writes the document object to file</span>
        document.write();

        <span class="cc">// Closes all I/O streams associated with this writer object</span>
        writer.dispose();
    }
}
  </pre>
 </body>
</html>