<html>
 <head>
  <LINK REL ="stylesheet" TYPE="text/css" HREF="../stylesheet.css" TITLE="Style">
  <LINK REL ="stylesheet" TYPE="text/css" HREF="example.css" TITLE="Style">
 </head>
 <body>
<pre>
import java.io.IOException;

import com.gnostice.pdfone.PDFOne;
import com.gnostice.pdfone.PdfDocument;
import com.gnostice.pdfone.PdfException;
import com.gnostice.pdfone.PdfImage;
import com.gnostice.pdfone.PdfMeasurement;
import com.gnostice.pdfone.PdfPage;
import com.gnostice.pdfone.PdfWriter;

public class PdfMeasurement_Examples
{
    <span class="cc">// Activates the component PDFOne.jar</span>
    static
    {
        PDFOne.activate("T95VZE:W8HBPVA:74VQ8QV:LO4V8",
            "9B1HRZAP:X5853ERNE:5EREMEGRQ:TX1R10");
    }

    public static void main(String[] args) throws IOException,
        PdfException
    {
        PdfMeasurement_Examples obj = new PdfMeasurement_Examples();

        <span class="cc">// To try other examples, add the obj.&lt;example_method&gt;
        // accordingly. For example, try:
        // obj.convertToPdfUnit_Example();</span>
        obj.convertToMeasurementUnit_Example();;
    }

</pre><a name="convertToMeasurementUnit"></a><pre>
    <span class="cc">// This code segment creates a page 600 points wide and 800
    // points long. However, it uses a method that specifies page
    // dimensions in inches. Hence, the convertToMeasurementUnit
    // method is used to convert point values to inches.</span>
    public void convertToMeasurementUnit_Example()
        throws IOException, PdfException
    {
        PdfWriter writer = PdfWriter.fileWriter(
            "PdfMeasurement_convertToMeasurementUnit_Example.pdf");
        PdfDocument document = new PdfDocument(writer);

        <span class="cc">// Converts page dimensions from points to inches</span>
        double b = PdfMeasurement.<span class="ck">convertToMeasurementUnit(
                                      PdfMeasurement.MU_INCHES, 
                                      600)</span>;
        double h = PdfMeasurement.<span class="ck">convertToMeasurementUnit(
                                      PdfMeasurement.MU_INCHES, 
                                      800)</span>;

        <span class="cc">// Creates a page with above dimensions</span>
        PdfPage page = new PdfPage(b, h, PdfMeasurement.MU_INCHES);

        <span class="cc">// Writes text identifying the page</span>
        page.writeText(
                "This page is 600 points wide and 800 points long!",
                2, 1);
        page.writeText(
                "It was created with method PdfPage(b, h, "
                + "PdfMeasurement.MU_INCHES)",
                2, 1.2);
        page.writeText(
                "where b = " + b 
                + " inches and h = " + h
                + " inches.", 
                2, 1.4);

        document.add(page);

        <span class="cc">// Sets the file to be opened after it is written to</span>
        document.setOpenAfterSave(true);

        <span class="cc">// Writes the document object to file</span>
        document.write();

        <span class="cc">// Closes all I/O streams associated with this writer object</span>
        writer.dispose();
    }

</pre><a name="convertToPdfUnit"></a><pre>
    <span class="cc">// This code segment draws an image using a method that requires
    // the image dimensions to be specified in points. However, the
    // image dimensions are known only in pixels. Hence, the
    // convertToPdfUnit method is used to convert pixel values to
    // points.</span>
    public void convertToPdfUnit_Example() throws IOException,
        PdfException
    {
        PdfWriter writer = PdfWriter.fileWriter(
            "PdfMeasurement_convertToPdfUnit_Example.pdf");

        PdfDocument document = new PdfDocument(writer);

        <span class="cc">// Creates a PdfImage object. Assumes that an image file
        // banner_img_468_60.jpg exists inside a "InputDocs"
        // directory in the current directory. Also assumes that
        // the image is assumed 468 pixels wide and 60 pixels tall.</span>
        PdfImage image = PdfImage.create("banner_img_468_60.jpg");

        <span class="cc">// Converts image dimensions from pixels to points</span>
        double b = PdfMeasurement.<span class="ck">convertToPdfUnit(
                                      PdfMeasurement.MU_PIXELS,
                                      468)</span>;
        double h = PdfMeasurement.<span class="ck">convertToPdfUnit(
                                      PdfMeasurement.MU_PIXELS,
                                      60)</span>;

        <span class="cc">// Draws the image with its height and width specified in
        // points. Requires width and height arguments to be
        // specified in points.</span>
        document.drawImage(image, 200, 100, b, h);

        <span class="cc">// Writes text identifying the image</span>
        document.writeText("b = " + b + " points", 200, 60);
        document.writeText("h = " + h + " points", 200, 70);
        document.writeText("drawImage(image, 200, 100, b, h)",
                           200,
                           80);

        <span class="cc">// Sets the file to be opened after it is written to</span>
        document.setOpenAfterSave(true);

        <span class="cc">// Writes the document object to file</span>
        document.write();

        <span class="cc">// Closes all I/O streams associated with this writer object</span>
        writer.dispose();
    }
}
  </pre>
 </body>
</html>