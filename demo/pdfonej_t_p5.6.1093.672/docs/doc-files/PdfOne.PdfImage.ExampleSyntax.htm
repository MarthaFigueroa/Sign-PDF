<html>
 <head>
  <LINK REL ="stylesheet" TYPE="text/css" HREF="../stylesheet.css" TITLE="Style">
  <LINK REL ="stylesheet" TYPE="text/css" HREF="example.css" TITLE="Style">
 </head>
 <body>
<pre>
import java.io.File;
import java.io.IOException;

import com.gnostice.pdfone.PDFOne;
import com.gnostice.pdfone.PdfDocument;
import com.gnostice.pdfone.PdfException;
import com.gnostice.pdfone.PdfImage;
import com.gnostice.pdfone.PdfMeasurement;
import com.gnostice.pdfone.PdfPage;
import com.gnostice.pdfone.PdfWriter;


public class PdfImage_Examples
{
    <span class="cc">// Activates the component PDFOne.jar</span>
    static
    {
        PDFOne.activate("T95VZE:W8HBPVA:74VQ8QV:LO4V8",
            "9B1HRZAP:X5853ERNE:5EREMEGRQ:TX1R10");
    }

    public static void main(String[] args) throws IOException,
        PdfException
    {
        PdfImage_Examples obj = new PdfImage_Examples();

        <span class="cc">// To try other examples, add the obj.&lt;example_method&gt;
        // accordingly. For example, try:
        // obj.FileDimensions_Example();</span>
        obj.Rotation_Example();
    }

</pre><a name="intro"></a><pre>
    <span class="cc">// This code segment creates a PdfImage object and draws it</span>
    <span class="cc">// twice - one with measurement unit in inches and the other </span>
    <span class="cc">// with pixels.</span>
    public void intro_Example() throws IOException, PdfException
    {
        PdfWriter writer = PdfWriter.fileWriter(
                               new File(
                                   "pdfimage_intro_example.pdf"));

        PdfDocument document = new PdfDocument(writer);

        <span class="cc">// Creates a PdfImage object for a 468x60 pixels image file</span>
        <span class="cc">// located in the InputDocs directory of the current</span>
        <span class="cc">// directory.  </span>
        PdfImage image = PdfImage.create("banner_img_468_60.jpg");


        document.<span class="ck">setMeasurementUnit(PdfMeasurement.MU_INCHES)</span>;
        image.setWidth(5);
        image.setHeight(1);
        document.<span class="ck">drawImage</span>(image, 1, 1);

        document.<span class="ck">setMeasurementUnit(PdfMeasurement.MU_PIXELS</span>);
        image.setWidth(5 * 96);
        image.setHeight(1 * 96);
        document.<span class="ck">drawImage</span>(image, 100, 300);

        document.setOpenAfterSave(true);
        document.write();
        writer.dispose();
    }

</pre><a name="bitsPerComponent"></a><pre>
    <span class="cc">// This code segment creates a PdfImage object, obtains number of</span>
    <span class="cc">// bits per component (pixel) and writes the value to page.</span>
    public void bitsPerComponent_Example() throws IOException,
        PdfException
    {
        PdfWriter writer = PdfWriter.fileWriter(
                               new File(
                                   "pdfimage_bitspercomponent_"
                                   + "example.pdf"));

        PdfDocument document = new PdfDocument(writer);
        PdfPage page = new PdfPage();
        page.setMeasurementUnit(PdfMeasurement.MU_INCHES);

        <span class="cc">// Creates a PdfImage object for banner_img_468_grey.jpg</span>
        <span class="cc">// located in the InputDocs directory of the current </span>
        <span class="cc">// directory.</span>
        PdfImage image = PdfImage.create(
                            "banner_img_468_60_8bpp.bmp");

        <span class="cc">// Obtains the number of bits per component and writes it to</span>
        <span class="cc">// page.</span>
        page.writeText(
                "Number of components in the colorspace : "
                + image.<span class="ck">bitsPerComponent()</span>,
                2,
                0.8);

        <span class="cc">// Draws the image for reference</span>
        page.drawImage(image, 1, 1);

        document.add(page);
        document.setOpenAfterSave(true);
        document.write();
        writer.dispose();
    }



</pre><a name="ObjectDimensions"></a><pre>
    <span class="cc">// This code segment creates a PdfImage object and draws it on the</span>
    <span class="cc">// screen. It then obtains the object's height and width values</span>
    <span class="cc">// and sets them to twice their original values.</span>
    public void ObjectDimensions_Example() throws IOException, PdfException
    {
        PdfWriter writer = PdfWriter.fileWriter(
                               new File(
                                   "pdfimage_objectdimensions_example.pdf"));

        PdfDocument document = new PdfDocument(writer);
        PdfPage page = new PdfPage();
        page.setMeasurementUnit(PdfMeasurement.MU_INCHES);

        <span class="cc">// Creates a PdfImage object for banner_img_468_60.jpg</span>
        <span class="cc">// located in the InputDocs directory of the current </span>
        <span class="cc">// directory.</span>
        PdfImage image = PdfImage.create(
                            "banner_img_160_50.jpg");

        <span class="cc">// Draws the object using its default height and width</span>
        page.writeText(
                "Image drawn using default height and width",
                2,
                0.8);
        page.drawImage(image, 2, 1);
</pre><a name="getHeight_Width"></a><pre>
        <span class="cc">// Obtains default height and weight values of the object</span>
        <span class="cc">// into variables</span>
        float l = image.<span class="ck">getHeight</span>();
        float b = image.<span class="ck">getWidth</span>();

        <span class="cc">// Sets height and width variables to twice the original</span>
        <span class="cc">// values</span>
        l = l * 2;
        b = b * 2;
</pre><a name="setHeight_Width"></a><pre>
        <span class="cc">// Sets new height and width values to the object</span>
        image.<span class="ck">setHeight</span>(l);
        image.<span class="ck">setWidth</span>(b);

        <span class="cc">// Draws the object using new object dimensions</span>
        page.writeText(
                "Image drawn with twice the height and width",
                2,
                3.8);

        page.drawImage(image, 2, 4);

        document.add(page);
        document.setOpenAfterSave(true);
        document.write();
        writer.dispose();
    }

</pre><a name="FileDimensions"></a><pre>
    <span class="cc">// This code segment creates a PdfImage object and obtains the</span>
    <span class="cc">// height and width of the image. It then writes these values to</span>
    <span class="cc">// the page.</span>
    public void FileDimensions_Example() throws IOException,
        PdfException
    {
        PdfWriter writer = PdfWriter.fileWriter(
                               new File(
                                   "pdfimage_height_example.pdf"));

        PdfDocument document = new PdfDocument(writer);
        document.setVersion(PdfDocument.VERSION_1_4);

        PdfPage page = new PdfPage();
        page.setMeasurementUnit(PdfMeasurement.MU_INCHES);

        <span class="cc">// Creates a PdfImage object for banner_img_468_60.jpg</span>
        <span class="cc">// located in the InputDocs directory of the current </span>
        <span class="cc">// directory.</span>
        PdfImage image = PdfImage.create(
                            "banner_img_468_60.jpg");

</pre><a name="height"></a><pre>
        <span class="cc">// Obtains the height of the image and writes the value to</span>
        <span class="cc">// page</span>
        page.writeText("Banner_img_468_60.jpg has a height of: "
                       + image.<span class="ck">height()</span>
                       + " pixels",
                       2,
                       0.8);
</pre><a name="width"></a><pre>
        <span class="cc">// Obtains the width of the image and writes the value to</span>
        <span class="cc">// page</span>
        page.writeText("Banner_img_468_60.jpg has a width of: "
                       + image.<span class="ck">width()</span>
                       + " pixels",
                       2,
                       1.2);

        <span class="cc">// Draws the image for reference</span>
        page.drawImage(image, 1, 1.6);

        document.add(page);
        document.setOpenAfterSave(true);
        document.write();
        writer.dispose();
    }

</pre><a name="Rotation"></a><pre>
    <span class="cc">// This code segment creates a PdfImage object and draws it on a</span>
    <span class="cc">// page. It then obtains the object's rotation angle, adds a</span>
    <span class="cc">// randomly chosen value (5 degrees) to it, and sets that as the</span>
    <span class="cc">// new rotation angle. When the object is drawn again, the image</span>
    <span class="cc">// is slanted.</span>
    public void Rotation_Example() throws IOException, PdfException
    {
        PdfWriter writer = PdfWriter.fileWriter(
                               new File(
                                   "pdfimage_getrotation_example.pdf"));

        PdfDocument document = new PdfDocument(writer);
        PdfPage page = new PdfPage();
        page.setMeasurementUnit(PdfMeasurement.MU_INCHES);

        <span class="cc">// Creates a PdfImage object for banner_img_468_60.jpg</span>
        <span class="cc">// located in the InputDocs directory of the current </span>
        <span class="cc">// directory.</span>
        PdfImage image = PdfImage.create(
                            "banner_img_468_60.jpg");

        page.writeText(
               "Image drawn with its scaled width set to 400 pixels",
               200,
               80);
        page.drawImage(image, 1, 1);

</pre><a name="getRotation"></a><pre>
        <span class="cc">// Obtains current rotation angle</span>
        float n = image.<span class="ck">getRotation()</span>;

</pre><a name="setRotation"></a><pre>
        <span class="cc">// Sets rotation angle to 5 degrees so that the image is</span>
        <span class="cc">// slightly slanted</span>
        n = n + 5;
        image.<span class="ck">setRotation(n)</span>;
        page.writeText("Image redrawn but slanted", 1, 2.8);
        page.drawImage(image, 1, 3);

        document.add(page);
        document.setOpenAfterSave(true);
        document.write();
        writer.dispose();
    }

</pre><a name="create"></a><pre>
    <span class="cc">// This code segment creates a PdfImage object for a given image</span>
    <span class="cc">// file located in a specified path and then draws it on a</span>
    <span class="cc">// document page.</span>
    public void create_Example() throws IOException, PdfException
    {
        PdfWriter writer = PdfWriter.fileWriter(
                               new File(
                                   "pdfimage_create_example.pdf"));

        PdfDocument document = new PdfDocument(writer);
        PdfPage page = new PdfPage();
        page.setMeasurementUnit(PdfMeasurement.MU_INCHES);

        <span class="cc">// Creates a PdfImage object using an image file</span>
        PdfImage image = PdfImage.<span class="ck">create(
                             "banner_img_468_60.jpg")</span>;

        page.writeText(
                "Image (banner_img_468_60.jpg) created and drawn",
                2,
                1.8);

        page.drawImage(image, 2, 2);

        document.add(page);
        document.setOpenAfterSave(true);
        document.write();
        writer.dispose();
    }
}
</pre>
 </body>
</html>