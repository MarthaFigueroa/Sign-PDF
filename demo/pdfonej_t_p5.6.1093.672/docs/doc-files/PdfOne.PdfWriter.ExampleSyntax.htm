<html>
 <head>
  <LINK REL ="stylesheet" TYPE="text/css" HREF="../stylesheet.css" TITLE="Style">
  <LINK REL ="stylesheet" TYPE="text/css" HREF="example.css" TITLE="Style">
 </head>
 <body>
<pre>
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;

import com.gnostice.pdfone.PDFOne;
import com.gnostice.pdfone.PdfDocument;
import com.gnostice.pdfone.PdfException;

import com.gnostice.pdfone.PdfWriter;

public class PdfWriter_Examples
{
    <span class="cc">// Activates the component PDFOne.jar</span>
    static
    {
        PDFOne.activate("T95VZE:W8HBPVA:74VQ8QV:LO4V8",
            "9B1HRZAP:X5853ERNE:5EREMEGRQ:TX1R10");
    }

    public static void main(String[] args) throws PdfException,
        IOException
    {
        PdfWriter_Examples obj = new PdfWriter_Examples();

        <span class="cc">// To try other examples, add the obj.&lt;example_method&gt;
        // accordingly. For example, try:
        // obj.fileStreamWriter_FileOutputStream_Example();</span>
        obj.memoryWriter_ByteArrayOutputStream_Example();
    }

<a name="memoryWriter_ByteArrayOutputStream"></a>
    <span class="cc">// This code segment creates a new PdfWriter object with a</span>
    <span class="cc">// ByteArrayOutputStream object. It then writes a line of text </span>
    <span class="cc">// on the PdfWriter object and saves it to a file.    </span>
    public void memoryWriter_ByteArrayOutputStream_Example()
        throws PdfException, IOException
    {
        <span class="cc">// Creates a ByteArrayOutputStream object</span>
        ByteArrayOutputStream boas = new ByteArrayOutputStream();

        <span class="cc">// Creates a new PdfWriter object with the</span>
        <span class="cc">// ByteArrayOutputStream object</span>
        PdfWriter writer = PdfWriter.<span class="ck">memoryWriter(boas)</span>;

        <span class="cc">// Creates a PdfDocument object with the new PdfWriter object</span>
        PdfDocument document = new PdfDocument(writer);

        <span class="cc">// Writes a line of text to the document</span>
        document.writeText("A new file was created using PdfWriter,"
                           + " ByteArrayOutputStream, and String!");

        <span class="cc">// Writes the PdfDocument object to the ByteArrayOutputStream</span>
        <span class="cc">// object</span>
        document.write();

        <span class="cc">// Sets the output file to be used by the</span>
        <span class="cc">// ByteArrayOutputStream object</span>
        OutputStream os = new FileOutputStream(
                              ".\\pdfwriter_memoryWriter_"
                              + "ByteArrayOutputStream_"
                              + "example.pdf");

        <span class="cc">// Writes to the output file</span>
        boas.writeTo(os);
        os.close();

        <span class="cc">// Closes I/O streams associated with this writer object</span>
        writer.dispose();
    }

</pre><a name="fileWriter_String"></a><pre>
    <span class="cc">// This code segment creates a new PdfWriter object with a</span>
    <span class="cc">// String object. It then writes a line of text on the PdfWriter</span>
    <span class="cc">// object and saves it to a file.</span>
    public void fileWriter_String_Example() throws IOException,
        PdfException
    {
         <span class="cc">// Creates a new PdfWriter object based on a File object</span>
        PdfWriter writer = PdfWriter.<span class="ck">fileWriter(
                               ".\\pdfwriter_fileWriter_"
                               + "String_example.pdf")</span>;

        <span class="cc">// Creates a PdfDocument object from the new PdfWriter object</span>
        PdfDocument document = new PdfDocument(writer);

        <span class="cc">// Writes a line of text to the document</span>
        document.writeText("A new file was created using PdfWriter,"
                           + " fileWriter, and String!");

        <span class="cc">// Sets the file to be opened after it is written to</span>
        document.setOpenAfterSave(true);

        <span class="cc">// Writes the PdfDocument object to a file</span>
        document.write();

        <span class="cc">// Closes I/O streams associated with this writer object</span>
        writer.dispose();
    }

</pre><a name="streamWriter_OutputStream"></a><pre>
    <span class="cc">// This code segment creates a PdfWriter object with a file</span>
    <span class="cc">// output stream. It then writes a line of text on the object and</span>
    <span class="cc">// saves it to a file.</span>
    public void streamWriter_OutputStream_Example()
        throws PdfException, IOException
    {

        <span class="cc">// Creates a new OutputStream object from a file output
        // stream</span>
        OutputStream os = new FileOutputStream(
                              ".\\pdfwriter_streamWriter_"
                              + "OutputStream_example.pdf");

        <span class="cc">// Creates a new PdfWriter object from the OutputStream
        // object</span>
        PdfWriter writer = PdfWriter.<span class="ck">streamWriter(os);</span>

        <span class="cc">// Creates a PdfDocument object from the new PdfWriter object</span>
        PdfDocument document = new PdfDocument(writer);

        <span class="cc">// Writes a line of text to the document</span>
        document.writeText("A new file was created using output"
                           + " stream os!");

        <span class="cc">// Writes the PdfDocument object to a file</span>
        document.write();
</pre><a name="dispose"></a><pre>
        <span class="cc">// Closes I/O streams associated with this writer object</span>
                writer.<span class="ck">dispose()</span>;
    }

</pre><a name="fileWriter_File"></a><pre>
    <span class="cc">// This code segment creates a new PdfWriter object with a</span>
    <span class="cc">// File object. It then writes a line of text on the PdfWriter</span>
    <span class="cc">// object and saves it to a file.</span>
    public void fileWriter_File_Example() throws IOException,
        PdfException
    {
        <span class="cc">// Creates a new PdfWriter object based on a File object</span>
        PdfWriter writer = PdfWriter.<span class="ck">fileWriter(
                               new File(
                                   ".\\pdfwriter_fileWriter_File_"
                                   + "example.pdf"))</span>;

        <span class="cc">// Creates a PdfDocument object from the new PdfWriter object        </span>
        PdfDocument document = new PdfDocument(writer);

        <span class="cc">// Writes a line of text to the document</span>
        document.writeText("A new file was created using PdfWriter,"
                           + " fileWriter, and File!");

        <span class="cc">// Sets the file to be opened after it is written to</span>
        document.setOpenAfterSave(true);

        <span class="cc">// Writes the PdfDocument object to a file        </span>
        document.write();

        <span class="cc">// Closes I/O streams associated with this writer object        </span>
        writer.dispose();

    }

</pre><a name="fileStreamWriter_FileOutputStream"></a><pre>
    <span class="cc">// This code segment creates a PdfWriter object with a file</span>
    <span class="cc">// output stream. It then writes a line of text on the object and</span>
    <span class="cc">// saves it to a file.</span>
    public void fileStreamWriter_FileOutputStream_Example()
        throws PdfException, IOException
    {

        <span class="cc">// Creates a new PdfWriter object from a new FileOutPutStream
        // object</span>
        PdfWriter writer = PdfWriter.<span class="ck">fileStreamWriter(
                               new FileOutputStream(
                                  ".\\pdfwriter_fileStreamWriter_"
                                  + "FileOutputStream_example.pdf"))</span>;

        <span class="cc">// Creates a PdfDocument object from the new PdfWriter object</span>
        PdfDocument document = new PdfDocument(writer);

        <span class="cc">// Writes a line of text to the document</span>
        document.writeText("A new file was created using PdfWriter, "
                           + "fileStreamWriter, and "
                           + "FileOutputStream!");

        <span class="cc">// Writes the PdfDocument object to a file </span>
        document.write();

        <span class="cc">// Closes I/O streams associated with this writer object</span>
        writer.dispose();
    }
}
</pre>
 </body>
</html>